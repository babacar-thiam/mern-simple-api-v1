{"ast":null,"code":"var _jsxFileName = \"/home/babacar/Sandbox/mern-simple-api-v1/client/src/components/userList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.user.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.user.email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.user.created\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.user.updated\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.user._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteUser(props.user._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 4\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 2\n}, this);\n_c = User;\nexport default function UserList() {\n  _s();\n  const [users, setUserss] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getUsers() {\n      const response = await fetch(`http://localhost:3005/api/users/`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const users = await response.json();\n      setUsers(users);\n    }\n    getUsers();\n    return;\n  }, [users.length]);\n\n  // This method will delete a record\n  async function deleteUser(id) {\n    await fetch(`http://localhost:3005/${id}`, {\n      method: \"DELETE\"\n    });\n    const newUsers = users.filter(el => el._id !== id);\n    setUsers(newUsers);\n  }\n\n  // This method will map out the records on the table\n  function userList() {\n    return users.map(user => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        user: user,\n        deleteUser: () => deleteUser(user._id)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }, this);\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 4\n  }, this);\n}\n_s(UserList, \"tABY+tyt8oHdpNXvJh7f7ThKQes=\");\n_c2 = UserList;\nvar _c, _c2;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","Link","User","props","user","name","email","created","updated","_id","deleteUser","UserList","users","setUserss","getUsers","response","fetch","ok","message","statusText","window","alert","json","setUsers","length","id","method","newUsers","filter","el","userList","map","marginTop"],"sources":["/home/babacar/Sandbox/mern-simple-api-v1/client/src/components/userList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n \nconst User = (props) => (\n <tr>\n   <td>{props.user.name}</td>\n   <td>{props.user.email}</td>\n   <td>{props.user.created}</td>\n   <td>{props.user.updated}</td>\n   <td>\n     <Link className=\"btn btn-link\" to={`/edit/${props.user._id}`}>Edit</Link> |\n     <button className=\"btn btn-link\"\n       onClick={() => {\n         props.deleteUser(props.user._id);\n       }}\n     >\n       Delete\n     </button>\n   </td>\n </tr>\n);\n \nexport default function UserList() {\n const [users, setUserss] = useState([]);\n \n // This method fetches the records from the database.\n useEffect(() => {\n   async function getUsers() {\n     const response = await fetch(`http://localhost:3005/api/users/`);\n \n     if (!response.ok) {\n       const message = `An error occurred: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const users = await response.json();\n     setUsers(users);\n   }\n \n   getUsers();\n \n   return;\n }, [users.length]);\n \n // This method will delete a record\n async function deleteUser(id) {\n   await fetch(`http://localhost:3005/${id}`, {\n     method: \"DELETE\"\n   });\n \n   const newUsers = users.filter((el) => el._id !== id);\n   setUsers(newUsers);\n }\n \n // This method will map out the records on the table\n function userList() {\n   return users.map((user) => {\n     return (\n       <User\n         user={user}\n         deleteUser={() => deleteUser(user._id)}\n         key={user._id}\n       />\n     );\n   });\n }\n \n // This following section will display the table with the records of individuals.\n return (\n   <div>\n     <h3>Users List</h3>\n     <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n       <thead>\n         <tr>\n           <th>Name</th>\n           <th>Email</th>\n           <th>Created</th>\n           <th>Updated</th>\n           <th>Action</th>\n         </tr>\n       </thead>\n       <tbody>{userList()}</tbody>\n     </table>\n   </div>\n );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}